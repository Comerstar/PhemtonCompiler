array[9] board;
int winner;
int playerTurn;
int turn;
int space;
int validInput;
int validTurn;
int turnNumber;

int def checkWinner() {
  #Check Horizontal
  int checkSpace = space - (space % 3);
  int previousSpace = board[checkSpace];
  bool complete = true;
  for i in 1 to 3 {
    if board[checkSpace + i] <> previousSpace {
      complete = false;
    }
  }
  if complete {
    if previousSpace <> 0 {
      return previousSpace;
    }
  }
  #Check Vertical
  checkSpace = space % 3;
  previousSpace = board[checkSpace];
  complete = true;
  for i in 1 to 3 {
    if board[checkSpace + i * 3] <> previousSpace {
      complete = false;
    }
  }
  if complete {
    if previousSpace <> 0 {
      return previousSpace;
    }
  }
  #Check RD Diagonal
  checkSpace = 0;
  previousSpace = board[checkSpace];
  complete = true;
  for i in 1 to 3 {
    if board[checkSpace + i * 4] <> previousSpace {
      complete = false;
    }
  }
  if complete {
    if previousSpace <> 0 {
      return previousSpace;
    }
  }
  #Check RU Diagonal
  checkSpace = 2;
  previousSpace = board[checkSpace];
  complete = true;
  for i in 1 to 3 {
    if board[checkSpace + (i * 2)] <> previousSpace {
      complete = false;
    }
  }
  if complete {
    if previousSpace <> 0 {
      return previousSpace;
    }
  }
  return 0;
}

def drawBoard () {
  sprite0colour = 0x0001;
  sprite0coordinates = 0x0f0f;
  sprite1colour = 0xffff;
  sprite1coordinates = 0x2204;
  sprite2colour = 0xffff;
  sprite2coordinates = 0x1111;
  sprite3colour = 0xffff;
  sprite3coordinates = 0x1344;
  sprite4colour = 0x8c63;
  sprite4coordinates = 0x5511;
  sprite5colour = 0x8c63;
  sprite5coordinates = 0x6800;
  sprite6colour = 0x8c63;
  sprite6coordinates = 0x9911;
  sprite7colour = 0x8c63;
  sprite7coordinates = 0x7822;
  sprite8colour = 0x8c63;
  sprite8coordinates = 0x6633;
  sprite9colour = 0x8c63;
  sprite9coordinates = 0x5944;
  graphics;
  sprite0colour = 0xffff;
  sprite0coordinates = 0xaa11;
  sprite1coordinates = 0xbd00;
  sprite2coordinates = 0xee11;
  sprite3coordinates = 0xcd22;
  sprite4colour = 0xffff;
  sprite4coordinates = 0xee33;
  sprite5colour = 0xffff;
  sprite5coordinates = 0xbd44;
  sprite6colour = 0xffff;
  sprite6coordinates = 0xaa33;
  sprite7coordinates = 0x0057;
  sprite8coordinates = 0x0477;
  sprite9coordinates = 0x3359;
  graphics;
  sprite0coordinates = 0x5955;
  sprite1coordinates = 0x5557;
  sprite2coordinates = 0x5877;
  sprite3coordinates = 0x9988;
  sprite4coordinates = 0x5899;
  sprite5colour = 0x8c63;
  sprite5coordinates = 0xbd55;
  sprite6colour = 0x8c63;
  sprite6coordinates = 0xaa68;
  sprite7coordinates = 0xbd77;
  sprite8coordinates = 0xee88;
  sprite9coordinates = 0xbd99;
  graphics;
  sprite0coordinates = 0x04aa;
  sprite1coordinates = 0x33bb;
  sprite2coordinates = 0x22cc;
  sprite3coordinates = 0x11dd;
  sprite4coordinates = 0x00ee;
  sprite5coordinates = 0x68aa;
  sprite6coordinates = 0x55bb;
  sprite7coordinates = 0x99bb;
  sprite8coordinates = 0x68cc;
  sprite9coordinates = 0x55dd;
  sprite10colour = 0x8c63;
  sprite10coordinates = 0x99dd;
  sprite11colour = 0x8c63;
  sprite11coordinates = 0x68ee;
  graphics;
  sprite0coordinates = 0xbdaa;
  sprite1coordinates = 0xaabb;
  sprite2coordinates = 0xeebd;
  sprite3coordinates = 0xbdcc;
  sprite4coordinates = 0xbdee;
  graphics;
  sprite0colour = 0x0001;
  sprite1colour = 0xf801;
  sprite2colour = 0xf801;
  sprite3colour = 0xf801;
  sprite4colour = 0xf801;
  sprite5colour = 0xf801;
  sprite6colour = 0x04bf;
  sprite7colour = 0x04bf;
  sprite8colour = 0x04bf;
  sprite9colour = 0x04bf;
  sprite0coordinates = 0x1010;
  sprite1coordinates = 0x1010;
  sprite2coordinates = 0x1010;
  sprite3coordinates = 0x1010;
  sprite4coordinates = 0x1010;
  sprite5coordinates = 0x1010;
  sprite6coordinates = 0x1010;
  sprite7coordinates = 0x1010;
  sprite8coordinates = 0x1010;
  sprite9coordinates = 0x1010;
  sprite10colour = 0;
  sprite10coordinates = 0xffff;
  sprite11colour = 0;
}

def drawX () {
  int x = (space % 3) * 5;
  int y = (space / 3) * 5;
  int temp = (x << 0xc) | (x << 0x8) | (y << 0x4) | (y);
  sprite0coordinates = temp + 0x0404;
  sprite1coordinates = temp + 0x1111;
  sprite2coordinates = temp + 0x4411;
  sprite3coordinates = temp + 0x1144;
  sprite4coordinates = temp + 0x4444;
  sprite5coordinates = temp + 0x2323;
  graphics;
}

def drawO () {
  int x = (space % 3) * 5;
  int y = (space / 3) * 5;
  int temp = (x << 0xc) | (x << 0x8) | (y << 0x4) | (y);
  sprite0coordinates = temp + 0x0404;
  sprite6coordinates = temp + 0x2311;
  sprite7coordinates = temp + 0x2344;
  sprite8coordinates = temp + 0x1123;
  sprite9coordinates = temp + 0x4423;
  graphics;
}

string[5] printString;
#Converts an integer into a string
def intToStr (int number) {
  printString = "     ";
  int i = 4;
  printString[i] = (number % 10) | 0x0030;
  number /= 10;
  i--;
  while (i >= 0) and (number <> 0) {
    printString[i] = (number % 10) | 0x0030;
    number /= 10;
    i--;
  }
}

mode = 0xc007;
bool swap = false;
bool winCount = false;
int player1Wins = 0;
int player2Wins = 0;
int draws = 0;
bool spinning;
int previousStart = 2;
drawBoard();

TTY = 0;
TTY = "The players are red and blue. Enter the number of the space you wish to place your piece in. ";

while true {
  TTY = "Enter a number into the keyboard to start. ";
  keyboard = 0;
  spinning = true;
  while spinning {
    keyboard = 1;
    while keyboard == 0 {
      keyboard = 1;
    }
    if keyboard & 0x00f0 == 0x0030 and keyboard & 0x000f < 10 {
      spinning = false;
    }
    elif keyboard == 's {
      if swap {
        swap = false;
        TTY = 0;
        TTY = "Player swapping disabled. ";
      }
      else {
        swap = true;
        TTY = 0;
        TTY = "Player swapping enabled. ";
      }
    }
    elif keyboard == 'w {
      if winCount {
        winCount = false;
        TTY = 0;
        TTY = "Win count disabled. ";
      }
      else {
        winCount = true;
        TTY = 0;
        TTY = "Win count enabled. ";
      }
    }
    elif keyboard == 'r {
      player1Wins = 0;
      player2Wins = 0;
      draws = 0;
      previousStart = 2;
      TTY = 0;
      TTY = "Win count reset. ";
    }
    elif keyboard == 'd {
      if winCount {
        TTY = 0;
        TTY = "Red wins: ";
        intToStr(player1Wins);
        for i in printString {
          if i <> '  {
            TTY = i;
          }
        }
        TTY = " Blue wins: ";
        intToStr(player2Wins);
        for i in printString {
          if i <> '  {
            TTY = i;
          }
        }
        TTY = " Draws: ";
        intToStr(draws);
        for i in printString {
          if i <> '  {
            TTY = i;
          }
        }
      }
    }
  }
  if swap {
    previousStart %= 2;
    previousStart++;
    playerTurn = previousStart;
  }
  else {
    playerTurn = 1;
    previousStart = 2;
  }
  TTY = 0;
  board[0] = 0;
  board[1] = 0;
  board[2] = 0;
  board[3] = 0;
  board[4] = 0;
  board[5] = 0;
  board[6] = 0;
  board[7] = 0;
  board[8] = 0;
  turnNumber = 0;
  winner = 0;
  drawBoard();
  while winner == 0 {
    keyboard = 0;
    if playerTurn == 1 {
      sprite10colour = 0xf801;
      graphics;
      TTY = "Red's turn. ";
    }
    elif playerTurn == 2 {
      sprite10colour = 0x04bf;
      graphics;
      TTY = "Blue's turn. ";
    }
    validTurn = 0;
    while validTurn == 0 {
      validInput = 0;
      while validInput == 0 {
        keyboard = 1;
        while keyboard == 0 {
          keyboard = 1;
        }
        if keyboard & 0x00f0 == 0x0030 {
          turn = keyboard & 0x000f;
          if turn > 0 and turn < 10 {
            validInput = 1;
          }
        }
      }
      space = turn - 1;
      if board[space] == 0 {
        validTurn = 1;
        board[space] = playerTurn;
        if playerTurn == 1 {
          sprite10colour = 0x7001;
          graphics;
          drawX();
        }
        elif playerTurn == 2 {
          sprite10colour = 0x0151;
          graphics;
          drawO();
        }
        winner = checkWinner();
        playerTurn %= 2;
        playerTurn++;
        turnNumber ++;
      }
      if turnNumber > 8 and winner == 0 {
        winner = 3;
      }
    }
    TTY = 0;
  }
  TTY = 0;
  if winner == 1 {
    sprite10colour = 0xf801;
    graphics;
    TTY = "Red wins. ";
    if winCount {
      player1Wins++;
    }
  }
  elif winner == 2 {
    sprite10colour = 0x04bf;
    graphics;
    TTY = "Blue wins. ";
    if winCount {
      player2Wins++;
    }
  }
  elif winner == 3 {
    sprite10colour = 0x8c63;
    graphics;
    TTY = "Draw. ";
    if winCount {
      draws++;
    }
  }
  keyboard = 0;
}