!4000
#print starting text
LDV 2007 MODE

LDV 0059 TTY
LDV 006f TTY
LDV 0075 TTY
LDV 0020 TTY
LDV 0061 TTY

LDV 0072 TTY
LDV 0065 TTY
LDV 0020 TTY
LDV 0061 TTY
LDV 0020 TTY

LDV 0072 TTY
LDV 0065 TTY
LDV 0064 TTY
LDV 0020 TTY
LDV 0062 TTY

LDV 0069 TTY
LDV 0072 TTY
LDV 0064 TTY
LDV 0020 TTY
LDV 0061 TTY

LDV 006e TTY
LDV 0064 TTY
LDV 0020 TTY
LDV 0079 TTY
LDV 006f TTY

LDV 0075 TTY
LDV 0020 TTY
LDV 0077 TTY
LDV 0061 TTY
LDV 006e TTY

LDV 0074 TTY
LDV 0020 TTY
LDV 0074 TTY
LDV 006f TTY
LDV 0020 TTY

LDV 0061 TTY
LDV 0076 TTY
LDV 006f TTY
LDV 0069 TTY
LDV 0064 TTY

LDV 0020 TTY
LDV 0074 TTY
LDV 0068 TTY
LDV 0065 TTY
LDV 0020 TTY

LDV 0067 TTY
LDV 0072 TTY
LDV 0065 TTY
LDV 0065 TTY
LDV 006e TTY

LDV 0020 TTY
LDV 0070 TTY
LDV 0069 TTY
LDV 0070 TTY
LDV 0065 TTY

LDV 0073 TTY
LDV 002e TTY
LDV 0020 TTY
LDV 0050 TTY
LDV 0072 TTY

LDV 0065 TTY
LDV 0073 TTY
LDV 0073 TTY
LDV 0020 TTY
LDV 0055 TTY

LDV 0070 TTY
LDV 0020 TTY
LDV 006f TTY
LDV 006e TTY
LDV 0020 TTY

LDV 0043 TTY
LDV 006f TTY
LDV 006e TTY
LDV 0074 TTY
LDV 0072 TTY

LDV 006f TTY
LDV 006c TTY
LDV 006c TTY
LDV 0065 TTY
LDV 0072 TTY

LDV 0020 TTY
LDV 0031 TTY
LDV 0020 TTY
LDV 0074 TTY
LDV 006f TTY

LDV 0020 TTY
LDV 0073 TTY
LDV 0074 TTY
LDV 0061 TTY
LDV 0072 TTY

LDV 0074 TTY
LDV 002c TTY
LDV 0020 TTY
LDV 0074 TTY
LDV 0068 TTY

LDV 0065 TTY
LDV 006e TTY
LDV 0020 TTY
LDV 0070 TTY
LDV 0072 TTY

LDV 0065 TTY
LDV 0073 TTY
LDV 0073 TTY
LDV 0020 TTY
LDV 0055 TTY

LDV 0070 TTY
LDV 0020 TTY
LDV 006f TTY
LDV 006e TTY
LDV 0020 TTY

LDV 0043 TTY
LDV 006f TTY
LDV 006e TTY
LDV 0074 TTY
LDV 0072 TTY

LDV 006f TTY
LDV 006c TTY
LDV 006c TTY
LDV 0065 TTY
LDV 0072 TTY

LDV 0020 TTY
LDV 0031 TTY
LDV 0020 TTY
LDV 0074 TTY
LDV 006f TTY

LDV 0020 TTY
LDV 0066 TTY
LDV 006c TTY
LDV 0061 TTY
LDV 0070 TTY

LDV 002e TTY
LDV 0020 TTY

LDV 0000 CTRLR1P //RESTARTGAME

JPC 1 START
PWS
JPC 1 START

#Initialise Data
LDV 0f0f 33c0 #Load in BG 1 size into 33c0 //START
LDV a73d 33c1 #Load in BG 1 colour into 33c1
LDV 0fcf 33c2 #Load in BG 2 size into 33c2
LDV cfad 33c3 #Load in BG 2 colour into 33c3
LDV 0578 33c4 #Load in cloud coordinates
LDV f7bd 33c5 #Load in cloud colour
LDV af23 33c6 #Load in cloud coordinates
LDV f7bd 33c7 #Load in cloud colour
LDV 000f 33fe #Load in covering strip coordinates (used to hide when the pipe positions are randomised)
LDV 0001 33ff #Load in covering strip colour
LDV 05c1 APIPE1C #Load in Pipe colour for pipe 1
LDV 05c1 APIPE2C #Load in Pipe colour for pipe 2
LDV 05c1 APIPE3C #Load in Pipe colour for pipe 3
LDV 05c1 APIPE4C #Load in Pipe colour for pipe 4
LDV 05c1 APIPE5C #Load in Pipe colour for pipe 5
LDV 05c1 APIPE6C #Load in Pipe colour for pipe 6
LDV 05c1 APIPE7C #Load in Pipe colour for pipe 7
LDV 05c1 APIPE8C #Load in Pipe colour for pipe 8
LDV f801 BIRDC #Load in Bird colour into 3fff
LDV 0000 ASCORE #Reset score to 0

#Initialise Starting Pipes
LDV 3304 APIPE1X #Load in Pipe 1 Start
LDV 33bf APIPE2X #Load in Pipe 2 Start
LDV APIPE1X ACLOSEPIPE #Load in the closest pipe to the bird

#Pause before changing execution mode, to ensure execution mode changes correctly. 
PWS
LDV 000c PRCT

#Initialise Pipes
LDV PIPELOWERMAX RND #Generate new random number
ALB ORR 7700 RND APIPE3X #Load in Pipe 3 Start
ALB ADD PIPEGAP RND AVARA #Calculate upper pipe position
ALB LSB 0004 AVARA AVARA
ALB ORR 770f AVARA APIPE4X #Load in Pipe 4 Start

LDV PIPELOWERMAX RND #Generate new random number
ALB ORR bb00 RND APIPE5X #Load in Pipe 5 Start
ALB ADD PIPEGAP RND AVARA #Calculate upper pipe position
ALB LSB 0004 AVARA AVARA
ALB ORR bb0f AVARA APIPE6X #Load in Pipe 6 Start

PWS
LDV PIPELOWERMAX RND #Generate new random number
ALB ORR ff00 RND APIPE7X #Load in Pipe 7 Start
ALB ADD PIPEGAP RND AVARA #Calculate upper pipe position
ALB LSB 0004 AVARA AVARA
ALB ORR ff0f AVARA APIPE8X #Load in Pipe 8 Start

LDV 11aa BIRDX #Load in Bird Start
LDV BIRDFLAP ABIRDV #Load in bird velocity
LDV 00ff ATBIRDV1 #Load in pre-bird velocity change

#Update mode temporarily to ensure screen renders
PWS
LDV 0007 MODE
PWS
PWS
LDV 2007 MODE

#Spin until up on Controller 1 pressed
PWS //SPIN1
ANB INB 0000 CTRLR1P
JPB 03 SPIN1
LDV 0000 CTRLR1P

#Setting a bunch of constants, mostly variable addresses
#Note that these apply across the whole program
%PIPELOWERMAX = 0007
%PIPEGAP = 0007
%BIRDG = 0006
%BIRDFLAP = 00f2
%ABIRDV = 0100
%ATBIRDV1 = 0101
%ATBIRDV2 = 0102
%ASCORE = 0103
%ACLOSEPIPE = 0104
%ATCLOSEPIPE = 0105
%AVARA = 01ff
%AVARB = 01fe
%AVARC = 01fd
%APIPE1X = 33ec
%APIPE1C = 33ed
%APIPE2X = 33ee
%APIPE2C = 33ef
%APIPE3X = 33f0
%APIPE3C = 33f1
%APIPE4X = 33f2
%APIPE4C = 33f3
%APIPE5X = 33f4
%APIPE5C = 33f5
%APIPE6X = 33f6
%APIPE6C = 33f7
%APIPE7X = 33f8
%APIPE7C = 33f9
%APIPE8X = 33fa
%APIPE8C = 33fb
%BIRDX = 33fc
%BIRDC = 33fd

#Update mode for game execution
LDV 8003 MODE
PWS
#Ensures that teh game loop starts on the right clock cycle
JPC 0 STARTGAME
PWS
JPC 0 STARTGAME

#Move the pipes
PWS //STARTGAME
ALB XAD ff00 APIPE1X APIPE1X //STARTLOOP
ALB XAD ff00 APIPE2X APIPE2X
ALB XAD ff00 APIPE3X APIPE3X
ALB XAD ff00 APIPE4X APIPE4X
ALB XAD ff00 APIPE5X APIPE5X
ALB XAD ff00 APIPE6X APIPE6X
ALB XAD ff00 APIPE7X APIPE7X
ALB XAD ff00 APIPE8X APIPE8X
ALD XAD ATBIRDV1 BIRDX BIRDX #Update bird position

PWS #----------------------------------------

#Figure out which pipe is closest, and then figure out if the bird has collided with it
LDI ACLOSEPIPE ATCLOSEPIPE
ALB AND ff00 ATCLOSEPIPE AVARB #Mask out the y coordinate
ANB SBA 1100 AVARB #Compare the x coordinates to see if the pipe is in the right column
JPF NQL NEXTCHECK1 #Jump past the check if this not the case

ALB AND 000f ATCLOSEPIPE AVARB #Mask out closest pipe x coordinates
LDD AVARB OUTPUT #Debug outputs
ALB AND 000f BIRDX AVARC #Mask out bird x coordinates
LDD AVARC OUTPUT #Debug outputs
ALR SBA fefd AVARB
JPF CRY GAMEOVER #Game over if bird collided with upper pipe
LDD AVARB OUTPUT

ANB ADD 0006 AVARB
JPF NCY GAMEOVER #Game over is bird collided with lower pipe

#Check if bird collided with bottom of screen
ANB SBA 11ff BIRDX //NEXTCHECK1
JPF EQL GAMEOVER

#Check if bird collided with top of screen
ANB SBA 1100 BIRDX 
JPF EQL GAMEOVER

PWS #---------------------------------------- 

#If the closes pipe reached the edge of the screen, change which pipe is the closest pipe
ANB AND ff00 ATCLOSEPIPE
JPF NQL PASTPIPE
ALB ICB 0000 ASCORE ASCORE

#Branch to determine which pipe needs a new random value
ANB SBA APIPE4C ACLOSEPIPE
JPF ELS PIPE12

ANB SBA APIPE6C ACLOSEPIPE
JPF ELS PIPE3

#Assigning the pipe a new random value
LDV PIPELOWERMAX RND #PIPE 78
LDD RND APIPE7X #Load in Pipe 7 Start
ALB ADD PIPEGAP RND AVARA #Calculate upper pipe position
ALB LSB 0004 AVARA AVARA
ALB ORR 000f AVARA APIPE8X #Load in Pipe 8 Start
LDV APIPE1X ACLOSEPIPE
JMP PASTPIPE

LDV PIPELOWERMAX RND #PIPE 56 //PIPE3
LDD RND APIPE5X #Load in Pipe 5 Start
ALB ADD PIPEGAP RND AVARA #Calculate upper pipe position
ALB LSB 0004 AVARA AVARA
ALB ORR 000f AVARA APIPE6X #Load in Pipe 6 Start
LDV APIPE7X ACLOSEPIPE
JMP PASTPIPE

ANB SBA APIPE2C ACLOSEPIPE//PIPE12
JPF ELS PIPE1

LDV PIPELOWERMAX RND #PIPE 34
LDD RND APIPE3X #Load in Pipe 3 Start
ALB ADD PIPEGAP RND AVARA #Calculate upper pipe position
ALB LSB 0004 AVARA AVARA
ALB ORR 000f AVARA APIPE4X #Load in Pipe 4 Start
LDV APIPE5X ACLOSEPIPE
JMP PASTPIPE

LDV PIPELOWERMAX RND #PIPE 12 //PIPE1
LDD RND APIPE1X #Load in Pipe 1 Start
ALB ADD PIPEGAP RND AVARA #Calculate upper pipe position
ALB LSB 0004 AVARA AVARA
ALB ORR 000f AVARA APIPE2X #Load in Pipe 2 Start
LDV APIPE3X ACLOSEPIPE

PWS #---------------------------------------- //PASTPIPE

#Read the controler input
ANB INB 0000 CTRLR1P
JPB 13 FLAP #Jump if the player inputted a flap
ALB ADD BIRDG ABIRDV ABIRDV #Apply gravity
JMP PASTFLAP
LDV BIRDFLAP ABIRDV #Bird flaps wing //FLAP
LDV 0000 CTRLR1P //PASTFLAP

#Reformat the new velcity into a usable form
ALB RSB 0004 ABIRDV ATBIRDV2
ALB AND 000f ATBIRDV2 ATBIRDV1 
ALB LSB 0004 ATBIRDV1 ATBIRDV2
ALR ORR 0102 ATBIRDV1

PWS #----------------------------------------

#Return to the start of the game loop
JMP STARTLOOP

#Game over handling
PWS //GAMEOVER
#Update execution mode
LDV 0010 PRCT
PWS
LDV 2007 MODE
PWS

#Print player's score
LDV 0000 TTY
LDV 0047 TTY
LDV 0041 TTY
LDV 004d TTY
LDV 0045 TTY
LDV 0020 TTY
LDV 004f TTY
LDV 0056 TTY
LDV 0045 TTY
LDV 0052 TTY

LDV 002e TTY
LDV 0020 TTY

LDV 0059 TTY
LDV 006f TTY
LDV 0075 TTY
LDV 0020 TTY
LDV 0073 TTY
LDV 0063 TTY
LDV 006f TTY
LDV 0072 TTY
LDV 0065 TTY
LDV 0064 TTY
LDV 0020 TTY

LDD ASCORE 0110

#Push data onto the stack before the function call
PSD ASCORE
PSV PRINTSCORE

#Jump to binary to BCD algorithm in utility bank
JMP BinaryToBCD

#Print the returned score
PPD 0100 //PRINTSCORE
LDV 0001 0101
PPD 0102 //PRINTSCORELOOP
ALB ORR 0030 0102 TTY
ALB ICB 0000 0101 0101
AND SBA 0100 0101
JPF CRY PRINTSCORELOOP
LDV 002e TTY 
LDV 0020 TTY

#Check if new high score
AND SBA 3c00 0110
JPF NCY NEWHIGHSCORE

#Print high score
LDV 0048 TTY
LDV 0069 TTY
LDV 0067 TTY
LDV 0068 TTY
LDV 0020 TTY
LDV 0073 TTY
LDV 0063 TTY
LDV 006f TTY
LDV 0072 TTY
LDV 0065 TTY
LDV 0020 TTY
LDV 0069 TTY
LDV 0073 TTY
LDV 0020 TTY

PSD 3c00
PSV PRINTHIGHSCORE

#Convert high score to BCD
JMP BinaryToBCD

#Print the high score
PPD 0100 //PRINTHIGHSCORE
LDV 0001 0101
PPD 0102 //PRINTHIGHSCORELOOP
ALB ORR 0030 0102 TTY
ALB ICB 0000 0101 0101
AND SBA 0100 0101
JPF CRY PRINTHIGHSCORELOOP
LDV 002e TTY 
LDV 0020 TTY
JMP ENDMENU

#Print message about new high score
LDD 0110 3c00//NEWHIGHSCORE
LDV 004e TTY
LDV 0065 TTY
LDV 0077 TTY
LDV 0020 TTY
LDV 0068 TTY
LDV 0069 TTY
LDV 0067 TTY
LDV 0068 TTY
LDV 0020 TTY
LDV 0073 TTY
LDV 0063 TTY
LDV 006f TTY
LDV 0072 TTY
LDV 0065 TTY
LDV 0021 TTY
LDV 0020 TTY

#Print player's closing options
LDV 0050 TTY //ENDMENU
LDV 0072 TTY
LDV 0065 TTY
LDV 0073 TTY
LDV 0073 TTY
LDV 0020 TTY

LDV 0055 TTY
LDV 0070 TTY
LDV 0020 TTY

LDV 006f TTY
LDV 006e TTY
LDV 0020 TTY

LDV 0043 TTY
LDV 006f TTY
LDV 006e TTY
LDV 0074 TTY
LDV 0072 TTY
LDV 006f TTY
LDV 006c TTY
LDV 006c TTY
LDV 0065 TTY
LDV 0072 TTY
LDV 0020 TTY

LDV 0031 TTY
LDV 0020 TTY

LDV 0074 TTY
LDV 006f TTY
LDV 0020 TTY

LDV 0070 TTY
LDV 006c TTY
LDV 0061 TTY
LDV 0079 TTY
LDV 0020 TTY

LDV 0061 TTY
LDV 0067 TTY
LDV 0061 TTY
LDV 0069 TTY
LDV 006e TTY
LDV 002e TTY
LDV 0020 TTY

#Reset the game
JMP RESTARTGAME